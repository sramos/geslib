<?php
// $Id: geslib.module

/**
* @file
* Importacion/exportacion de datos con geslib.
*/

/**
 * Implements hook_permission().
 */
function geslib_permission() {
  return array(
      'geslib content import' => array(
          'title' => t('Import Geslib files'),
      ),
      'geslib report page' => array(
          'title' => t('Imported Geslib items report'),
      ),
      'geslib delete report line' => array(
          'title' => t('Delete imported Geslib item'),
      ),
  );
}

/**
 * Implementation of hook_menu().
 */
function geslib_menu() {
  $items = array();
  # Define import form
  $items['admin/store/geslib_import'] = array(
    'title' => 'Import Geslib File',
    'description' => 'Import Geslib File',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('geslib_first_import_form'),
    'access callback' => 'user_access',
    'access arguments' => array('geslib content import'),
    'type' => MENU_NORMAL_ITEM,
  );
  # Define reports page
  $items['admin/store/reports/geslib_report'] = array(
    'title' => 'Imported Geslib Files Report',
    'description' => 'Imported Geslib Files Report',
    'page callback' => 'geslib_files_report',
    'access callback' => 'user_access',
    'access arguments' => array('geslib report page'),
  );
  # Delete log line
  $items['geslib/delete_log'] = array(
    'title' => 'Delete log line',
    'page callback' => 'geslib_delete_log',
    'page arguments' => array(2, 3),
    'access callback' => 'user_access',
    'access arguments' => array('geslib delete report line'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function geslib_theme() {
  return array(
    'geslib_report' => array(
      'template' => 'geslib_report',
      'arguments' => array('files' => NULL),
    ),
  );
}

/**
  * Report imported files page
  */
function geslib_files_report() {
  $list = array();
  # Get all geslib logs
  $results = db_query("SELECT * FROM {geslib_log} ORDER BY start_date DESC LIMIT 30");
  while ($record = db_fetch_object($results)) {
    $list[] = $record;
  }

  return theme('geslib_report', $list);
}

function geslib_settings_form($form, &$form_state) {
  $form['geslib_directory'] = array(
    '#type' => 'textfield',
    '#title' => t('Geslib directory'),
    '#default_value' => variable_get('geslib_directory', 'sites/default/files/geslib'),
  );
  return system_settings_form($form);
}

function geslib_init() {
}

/**
 *
 * @return string
 */
function _geslib_get_file_to_process() {
  $geslib_dir = DRUPAL_ROOT.'/'.variable_get('geslib_directory', 'sites/default/files/geslib');
  $files_tmp = scandir($geslib_dir);

  $processed_files = db_select('geslib_log', 'g')->fields('g', array('imported_file'))
    ->execute()->fetchCol();

  if (empty($processed_files)) {
    //If nothing in the log, it means we haven't done the first import
    return '';
  }

  $files = array();
  foreach ($files_tmp as $value) {
    if (strpos($value, '.') !== 0 && strpos($value, '-') !== 0 && !in_array($value, $processed_files)){
      $files[] = $value;
    }
  }

  $file_to_process = array_shift($files);

  if (strrpos($file_to_process, '.zip') == TRUE) {
    $zip = new ZipArchive;
    $res = $zip->open($geslib_dir.'/'.$file_to_process);
      if ($res === TRUE) {
        $zip->extractTo($geslib_dir);
        $zip->close();
        unlink($geslib_dir.'/'.$file_to_process);
        $file_to_process = _geslib_get_file_to_process();
      }
  }
  return $file_to_process;

}
